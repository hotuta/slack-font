#include <nan.h>
#include "SHSession.h"
#include "SHDeviceManagerWrapper.h"

using v8::FunctionTemplate;
using v8::Object;
using v8::String;
using v8::Function;
using v8::Local;
using v8::Value;

NAN_METHOD(SetResourceBasePath) {
    if (!(info[0]->IsUndefined()) && info[0]->IsString())
    {
        SHSession::winssb_resource_base_path = *Nan::Utf8String(info[0]);
    }

    info.GetReturnValue().SetUndefined();
}

// Expose synchronous and asynchronous access to our
// Estimate() function
void InitAll(v8::Handle<Object> exports) {

//  exports->Set(Nan::New<String>("sh_test").ToLocalChecked(),
//    Nan::New<FunctionTemplate>(sh_test)->GetFunction());

  SHDeviceManagerWrapper::Init(exports);
  SHSession::Init(exports);

  exports->Set(Nan::New<String>("setResourceBasePath").ToLocalChecked(),
  	Nan::New<FunctionTemplate>(SetResourceBasePath)->GetFunction());

  // exports->Set(Nan::New<String>("calculateAsync").ToLocalChecked(),
  //   Nan::New<FunctionTemplate>(CalculateAsync)->GetFunction());
}

NODE_MODULE(addon, InitAll)
